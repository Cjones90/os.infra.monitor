version: "3.5"
services:
    dev:
        build:
            context: .
            target: src
        image: jestrr/monitor:dev
        entrypoint: ["pm2-dev", "server/pm2.config.js"]
        volumes:
            - ./src:/home/app/src
            - ./server:/home/app/server
            - ./docker-compose.override.yml:/home/app/docker-compose.yml
            ### TODO: Need a better way to checkout/launch new versions when
            ###  we eventually support this better
            ### Launching services from inside the container will be a later release
            ###  as I think the current implementation is poor, it should go through
            ###  the docker api, which I have yet to use
            # - /var/run/docker.sock:/var/run/docker.sock
            # - /usr/bin/docker:/usr/local/bin/docker
            # - $HOME/code/temprepo:/home/app/repos

        ### NOTE: You can omit/comment out networks for development
        networks:
            - proxy
        ports:
            - "4055:80"
        labels:
            com.consul.service: monitor
        deploy:
            replicas: 2
            update_config:
                parallelism: 1
                delay: 10s
                failure_action: rollback
                max_failure_ratio: .3
                order: start-first
            restart_policy:
                max_attempts: 3
                condition: on-failure
            placement:
                constraints:
                    - node.role == manager
                preferences:
                    - spread: node.labels.dc
                    - spread: node.labels.az
        healthcheck:
            test: exit $$(curl -sS http://localhost/healthcheck; echo $$?)
            interval: 5s
            timeout: 2s
            start_period: 5s
        environment:
            REGISTER_SERVICE:       "false"
            USE_CONSUL_DB:          "false"
            USE_AUTH:               "false"
            AUTH_URL:               ""
            LOG_EVERY_NUM_CHECKS:   5
            DEV_ENV:                "true"

# TODO: Some type of api integration test to make sure we still handle
#  all previously registered api calls and optionally if we missed adding any new ones

networks:
    proxy:
        external: true

# secrets:
#     dockerconfig:
#         file: $HOME/.docker/config.json
#     apps:
#         file: ./apps.json
